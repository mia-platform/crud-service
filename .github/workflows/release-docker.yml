name: Docker container release

on:
  workflow_call:
    secrets:
      docker_username:
        required: true
      docker_token:
        required: true
      github_cr_token:
        required: true
      nexus_username:
        required: true
      nexus_token:
        required: true
      sysdig_token:
        required: true
      kms_gcp_project:
        required: false
      gcp_wif:
        required: false
      cosign_key:
        required: false

jobs:
  release-docker:
    name: Build Docker Images
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: write
      packages: write
      id-token: write
    steps:
    - name: Checkout code
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      with:
        show-progress: false
    - name: Docker Login to GitHub Repository
      uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3.3.0
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.github_cr_token }}
    - name: Docker Login to DockerHub
      uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3.3.0
      with:
        username: ${{ secrets.docker_username }}
        password: ${{ secrets.docker_token }}
    - name: Login to Mia registry
      uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3.3.0
      with:
        registry: nexus.mia-platform.eu
        username: ${{ secrets.nexus_username }}
        password: ${{ secrets.nexus_token }}
    - name: Install Cosign
      uses: sigstore/cosign-installer@d7d6bc7722e3daa8354c50bcb52f4837da5e9b6a # v3.8.1
    - name: Set up QEMU
      uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392 # v3.6.0
      with:
        platforms: amd64,arm64
    - name: Configure docker metadata
      id: meta
      uses: docker/metadata-action@902fa8ec7d6ecbf8d84d538b9b233a880e428804 # v5.7.0
      env:
        DOCKER_METADATA_ANNOTATIONS_LEVELS: manifest # add 'index' when we will support a multiarch image
      with:
        images: |
          ghcr.io/mia-platform/crud-service
          docker.io/miaplatform/crud-service
          nexus.mia-platform.eu/core/crud-service
        tags: |
          type=ref,event=branch
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=semver,pattern={{major}}
        labels: |
          org.opencontainers.image.authors=Mia Platform Core Team<core@mia-platform.eu>
          org.opencontainers.image.documentation=https://docs.mia-platform.eu/docs/marketplace/handbooks/crud-oss-usage
          org.opencontainers.image.vendor=Mia s.r.l.
        annotations: |
          org.opencontainers.image.authors=Mia Platform Core Team<core@mia-platform.eu>
          org.opencontainers.image.documentation=https://docs.mia-platform.eu/docs/marketplace/handbooks/crud-oss-usage
          org.opencontainers.image.vendor=Mia s.r.l.
    - name: Setup Buildx Context
      uses: docker/setup-buildx-action@b5ca514318bd6ebac0fb2aedd5d36ec1b5c232a2 # v3.10.0
      id: buildx
      with:
        platforms: linux/amd64,linux/arm64
    - name: Build and push
      id: docker-build
      uses: docker/build-push-action@471d1dc4e07e5cdedd4c2171150001c434f0b7a4 # v6.15.0
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        annotations: ${{ steps.meta.output.annotations }}
        platforms: linux/amd64 # ${{ steps.buildx.outputs.platforms }} use this for multiarch images
        cache-from: type=gha
        cache-to: type=gha,mode=max
    - name: Scan image
      uses: sysdiglabs/scan-action@0065d3b93bd4115371b55720251adb1d228fe188 # v5.1.1
      with:
        image-tag: nexus.mia-platform.eu/core/crud-service:${{ steps.meta.output.version.main }}
        sysdig-secure-url: "https://eu1.app.sysdig.com"
        sysdig-secure-token: ${{ secrets.sysdig_token }}
        registry-user: ${{ secrets.nexus_username }}
        registry-password: ${{ secrets.nexus_token }}
        stop-on-processing-error: true
    - name: Generate SBOM
      uses: anchore/sbom-action@f325610c9f50a54015d37c8d16cb3b0e2c8f4de0 # v0.18.0
      if: github.ref_type == 'tag'
      with:
        artifact-name: crud-service-sbom.spdx.json
        output-file: ./crud-service-sbom.spdx.json
        image: nexus.mia-platform.eu/core/crud-service:${{ steps.meta.output.version.main }}
        upload-release-assets: true
    - name: GCP Auth
      uses: google-github-actions/auth@71f986410dfbc7added4569d411d040a91dc6935 # v2.1.8
      if: github.ref_type == 'tag'
      with:
        project_id: ${{ secrets.kms_gcp_poject }}
        workload_identity_provider: ${{ secrets.gcp_wif }}
        create_credentials_file: true
    - name: Sign image with a key
      if: github.ref_type == 'tag'
      run: |
        for tag in ${TAGS}; do
          image="${tag}@${DIGEST}"
          cosign sign --recursive --yes --key "${COSIGN_PRIVATE_KEY}" "${image}"
          cosign attest --recursive --yes --key "${COSIGN_PRIVATE_KEY}" --predicate "crud-service-sbom.spdx.json" --type="spdxjson" "${image}"
        done
      env:
        TAGS: |
          ghcr.io/mia-platform/crud-service:${{ steps.meta.output.version.main }}
          docker.io/miaplatform/crud-service:${{ steps.meta.output.version.main }}
          nexus.mia-platform.eu/core/crud-service:${{ steps.meta.output.version.main }}
        DIGEST: ${{ steps.docker-build.outputs.digest }}
        COSIGN_PRIVATE_KEY: ${{ secrets.cosign_key }}
